#Options
GenerateScanner = true
GenerateParser = true
Language = Java
ScannerName = Lexico
ParserName = Sintatico
SemanticName = Semantico
Package = resources
ScannerCaseSensitive = true
ScannerTable = Compact
Input = String
Parser = LL
#RegularDefinitions

mai: [A-Z]
min: [a-z]
letra: {mai} | {min}

dig: [0-9]
inteiro: (0|[1-9]{dig}*)

prefixo:(_i|_f|_b|_s)
#Tokens
//palavra reservada
palavra_reservada: {min}+

//identificador
identificador: {prefixo}({min}(({min}|{dig})*|{mai}({min}|{dig}))*|{mai}(({min}|{dig})(({min}|{dig})*|{mai}({min}|{dig}))*({mai})?)?)

//constante_int
constante_int: {inteiro}

//constante_float
constante_float: {inteiro}\.({dig}+[1-9]|{dig})

//constante_string
constante_string: \"([^\n\"\\%]|%i|%f|%s|%b)*\"

//relacao das palavras reservadas
//do else false fun if in main out repeat true  while

do = palavra_reservada: "do"
else = palavra_reservada: "else"
false = palavra_reservada: "false"
fun = palavra_reservada: "fun"
if = palavra_reservada: "if"
in = palavra_reservada: "in"
main = palavra_reservada: "main"
out = palavra_reservada: "out"
repeat = palavra_reservada: "repeat"
true = palavra_reservada: "true"
while = palavra_reservada: "while"


//relacao dos simbolos especiais
//& | ! , ; = : ( ) { } == != < > + - * /
"&": "&"
"|": "|"
"!":"!"
",": ","
";": ";"
"=": "="
":": ":"
"(": "("
")": ")"
"{": "{"
"}": "}"
"==": "=="
"!=": "!="
"<": "<"
">": ">"
"+": "+"
"-": "-"
"*": "*"
"/": "/"

//reconhecer e ignorar caracteres de formatacao
:[\s\t\n\r]

//reconhecer e ignorar comentarios
:#[^\n]*
:\[([^\[\]])*\]
#NonTerminals
<programa>
<lista_de_instrucoes>
<instrucao>
<instrucao_>
<instrucao__>
<declaracao_de_constante>
<declaracao_de_variaveis>
<comando>
<lista_de_identificadores>
<lista_de_identificadores_>
<valor>
<comando_atribuicao>
<comando_entrada_dados>
<comando_saida_dados>
<comando_selecao>
<comando_repeticao>
<lista_entrada>
<lista_entrada_>
<lista_entrada__>
<lista_expressoes>
<lista_expressoes_>
<lista_de_comandos>
<lista_de_comandos_>
<comando_else>
<comando_while>
<comando_repeat>
<expressao>
<expressao_>
<elemento>
<relacional>
<relacional_>
<operador_relacional>
<aritmetica>
<aritmetica_>
<termo>	
<termo_>	
<fator>
#Grammar
<programa> ::= #100 fun main "{" <lista_de_instrucoes> "}" #101 ;

<lista_de_instrucoes> ::= <instrucao>  ";"<instrucao_>;

<instrucao> ::= <declaracao_de_variaveis> <instrucao__> | <comando_entrada_dados> | <comando_saida_dados> | <comando_selecao> | <comando_repeticao>;
<instrucao_> ::= <instrucao> ";" <instrucao_> | î;
<instrucao__> ::= <declaracao_de_constante> #126 | "=" <expressao> #128|#127 î;

<declaracao_de_constante> ::= ":" <valor>;

<lista_de_identificadores> ::= identificador #125 <lista_de_identificadores_>;
<lista_de_identificadores_> ::= "," identificador <lista_de_identificadores_> | î;

<valor> ::= constante_int | constante_float | constante_string | true | false;

<declaracao_de_variaveis> ::= <lista_de_identificadores>;

<comando> ::= <comando_atribuicao> | <comando_entrada_dados> | <comando_saida_dados> | <comando_selecao> | <comando_repeticao>;

<comando_atribuicao> ::= <lista_de_identificadores> "=" <expressao> #128;

<comando_entrada_dados> ::= in "(" <lista_entrada> ")";

<lista_entrada> ::= <lista_entrada_> <lista_de_identificadores> #129 <lista_entrada__>;
<lista_entrada_> ::= constante_string #130 "," | î;
<lista_entrada__> ::= ";" <lista_entrada> | î;

<comando_saida_dados> ::= out "(" <lista_expressoes> ")";

<lista_expressoes> ::= <expressao> #102 <lista_expressoes_>;
<lista_expressoes_> ::= "," <lista_expressoes> | î;

<comando_selecao> ::= if "(" <expressao> ")" #118 "{" <lista_de_comandos> "}" <comando_else> #119;
<comando_else> ::= #120 else "{" <lista_de_comandos> "}" | î;

<lista_de_comandos> ::= <comando> ";" <lista_de_comandos_>;
<lista_de_comandos_> ::= <lista_de_comandos> | î;

<comando_repeticao> ::= <comando_while> | <comando_repeat>;
<comando_while> ::= #121 while "(" <expressao> ")" #122 do "{" <lista_de_comandos> "}" #123;
<comando_repeat> ::= #121 repeat "{" <lista_de_comandos> "}" while "(" <expressao> ")" #124;

<expressao>			::= <elemento> <expressao_>  ;
<expressao_>			::= î | "&" <elemento> #103 <expressao_> | "|" <elemento> #104 <expressao_> ;
<elemento>			::= <relacional> | true #105 | false #106 | "!" <elemento> #107	;

<relacional>			::= <aritmetica> <relacional_> ;
<relacional_>			::= î | <operador_relacional> #108 <aritmetica> #109 ;
<operador_relacional>	::= "==" | "!=" | "<" | ">" ;

<aritmetica>			::= <termo> <aritmetica_>  ;
<aritmetica_>			::= î | "+" <termo> #110 <aritmetica_> | "-" <termo> #111 <aritmetica_> ;

<termo>			::= <fator> <termo_> ;
<termo_>			::= î | "*" <fator> #112 <termo_> | "/" <fator> #113 <termo_> ;


<fator>			::= identificador #131| 
			    	    constante_int #114 | 
		   	    	    constante_float #115 | 
			    	    constante_string #116 | 
		   	    	    "(" <expressao> ")" |
	    	  	    	    "+" <fator> | 
	    		    	    "-" <fator> #117;


